{"version":3,"sources":["components/PersonLink.tsx","api.ts","components/Loader/Loader.tsx","components/Table.tsx","App.tsx","index.tsx"],"names":["PersonLink","person","to","slug","className","classNames","sex","name","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","Table","useParams","selectedSlug","useState","people","setPeople","isLoading","setIsLoading","useEffect","peopleFromServer","finally","peopleArray","map","personCopy","mother","find","mom","motherName","father","dad","fatherName","born","died","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2189ea77.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\n\nexport const Table: React.FC = () => {\n  const { slug: selectedSlug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      getPeople()\n        .then(peopleFromServer => {\n          setPeople(peopleFromServer);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }, 2000);\n  }, []);\n\n  const peopleArray = people.map((person) => {\n    const personCopy = { ...person };\n    const mother = people.find((mom) => (\n      mom.name === person.motherName\n    ));\n\n    const father = people.find((dad) => (\n      dad.name === person.fatherName\n    ));\n\n    if (mother) {\n      personCopy.mother = mother;\n    }\n\n    if (father) {\n      personCopy.father = father;\n    }\n\n    return personCopy;\n  });\n\n  return (\n\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading ? <Loader />\n        : (\n          <div className=\"box table-container\">\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {peopleArray.map((person) => {\n                  return (\n                    <tr\n                      key={person.slug}\n                      className={`${person.slug === selectedSlug ? 'has-background-warning' : ''}`}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n                      <td>\n                        {person.sex}\n                      </td>\n                      <td>\n                        {person.born}\n                      </td>\n                      <td>\n                        {person.died}\n                      </td>\n                      <td>\n\n                        {\n                          person.mother\n                            ? <PersonLink person={person.mother} />\n                            : person.motherName || '-'\n                        }\n                      </td>\n                      <td>\n                        {\n                          person.father\n                            ? <PersonLink person={person.father} />\n                            : person.fatherName || '-'\n                        }\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport {\n  NavLink, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Table } from './components/Table';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={\n                  <Table />\n                }\n              />\n\n              <Route\n                path=\":slug\"\n                element={\n                  <Table />\n                }\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}